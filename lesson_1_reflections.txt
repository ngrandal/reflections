How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could see the changes present on the new file

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can see the evolution of my code and probably be able to get to the final version of the code more directly the next time around

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro is that only logically related edits are contained within a commit. Con is that we may forget to commit 
	often enough and some changes may not be recorded at ideal times.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Files for some application maybe interrelated and require those related files to be saved
	as a single commit. Files for other applications may be more independent from each other and 
	changes in one may have negligible effect on any other file in the repository

How can you use the commands git log and git diff to view the history of files?

    git log provides a list of all commits (showing their IDs and timestamp)
	while git diff show the actual difference in code between 2 different commits.

How might using version control make you more confident to make changes that
could break something?

    It gives me confidence to know that all changes can be reverted with a few key strokes 
	that would put the code back into a state that works.

Now that you have your workspace set up, what do you want to try using Git for?

    Keep track of my html files
